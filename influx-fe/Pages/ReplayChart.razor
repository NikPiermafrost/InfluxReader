@inject IJSRuntime JSRuntime
@using influx_fe.Models
@using Newtonsoft.Json

<div class="col-6">
    <div class="card">
        <div class="card-header">
            <h4>Replay</h4>
        </div>
        <div class="card-body" style="min-height: 600px;">
            <canvas id="replay-chart" style="width: 100%;  height: 600px !important"></canvas>
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-between">
                <div class="form-row">
                    <label class="col-6">loop Time (ms)</label>
                    <div class="col-6">
                        <input type="number" class="form-control" @bind="LoopTime" />
                    </div>
                </div>
                <div class="form-row">
                    <label class="col-6">Elements Shown</label>
                    <div class="col-6">
                        <input type="number" class="form-control" @bind="Zoomlevel" />
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-primary" @onclick="@RunSimulation">Start simulation</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int ArrayStart { get; set; }

    [Parameter]
    public int ArrayEnd { get; set; }

    private int LoopTime = 500;

    private int Zoomlevel = 5;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initReplayChart", ArrayStart, ArrayEnd);
        }
    }

    private async Task RunSimulation()
    {
        await JSRuntime.InvokeVoidAsync("initializeSimulation", LoopTime, Zoomlevel);
    }
}
