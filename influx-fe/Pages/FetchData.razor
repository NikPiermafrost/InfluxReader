@page "/fetchdata"
@inject HttpClient Http
@using influx_fe.Models
@inject IJSRuntime JSRuntime

@if (IntList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="@(ActiveReplay ? "col-6" : "col-12")">
                <ChartComponent List="IntList" EmitStart="@InitReplay"></ChartComponent>
            </div>
            @if (ActiveReplay)
            {
                <ReplayComponent ArrayStart="SimulationValues.StartArray" ArrayEnd="SimulationValues.EndArray"></ReplayComponent>
            }
        </div>
    </div>
}

@code {
    private List<IntModel> IntList;
    private bool ActiveReplay = false;
    private SimulationValues SimulationValues = new SimulationValues();

    protected override async Task OnInitializedAsync()
    {
        IntList = await Http.GetFromJsonAsync<List<IntModel>>("https://localhost:44387/api/Data/RandomInt");
    }

    public void InitReplay(SimulationValues values)
    {
        if (values.EndArray != values.StartArray)
        {
            SimulationValues = values;
            ActiveReplay = true;
        }
        StateHasChanged();
    }
}
